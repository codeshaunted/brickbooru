<%= tag.article id: "post_#{post.id}", **article_attrs do -%>
  <div class="post-preview-container">
    <%= link_to polymorphic_path(link_target, q: tags), class: "post-preview-link", draggable: "false" do -%>
      <% if is_animated? || has_sound? %>
        <div class="post-animation-icon absolute top-0.5 left-0.5 p-0.5 m-0.5 leading-none rounded text-xs font-arial font-bold">
          <% if is_animated? %>
            <span class="post-duration align-middle">
              <%= duration_to_hhmmss(duration) %>
            </span>
          <% end %>
          <% if has_sound? %>
            <%= sound_icon(class: "h-3 mx-0.5") -%>
          <% end %>
        </div>
      <% end %>

      <picture>
        <% if media_asset.is_flash? %>
          <%= tag.img src: "/images/flash-preview.png", class: "post-preview-image", title: tooltip, alt: "post ##{post.id}", draggable: "false" -%>
        <% elsif media_asset.is_ldraw? %>
          <%= tag.img id:"preview-image-#{post.id}", class: "post-preview-image", title: tooltip, alt: "post ##{post.id}", draggable: "false" -%>
          <iframe id="preview-iframe-<%= post.id %>" class="post-preview-image" alt="post #<%= post.id%>" draggable="false" src="/buildinginstructions/ldraw_preview.htm?model=<%= media_asset.variant(:original).file_url %>" width=512 height=512></iframe>
          <script>
              // ChatGPT abomination that pulls the image from out of the iframe after it renders
              // developers developers developers developers developers developers developers

              // Wait for the iframe to load
              window.addEventListener('load', function() {
                var iframe = document.getElementById('preview-iframe-<%= post.id %>');
                var innerDoc = iframe.contentDocument || iframe.contentWindow.document;
                var previewImage = document.getElementById('preview-image-<%= post.id %>');

                // Function to extract image URL
                function extractImage() {
                    var image = innerDoc.querySelector('img');
                    if (image) {
                        iframe.remove()
                        previewImage.src = image.src;
                        observer.disconnect(); // Stop observing once the image is found
                    }
                }

                // Observer configuration
                var observerConfig = { childList: true, subtree: true };

                // Callback function to execute when mutations are observed
                var observerCallback = function(mutationsList, observer) {
                    for(var mutation of mutationsList) {
                        if (mutation.type === 'childList') {
                            extractImage(); // Check for image whenever DOM changes within the iframe
                        }
                    }
                };

                // Create a new observer
                var observer = new MutationObserver(observerCallback);

                // Start observing the target node (iframe's content document) for configured mutations
                observer.observe(innerDoc, observerConfig);

                // Initially check for image in case it's already present
                extractImage();
              });
          </script>
        <% else %>
          <% unless save_data %>
            <% case size %>
            <% when "150", "180" %>
              <%= tag.source type: "image/jpeg", srcset: "#{media_asset.variant("180x180").file_url} 1x, #{media_asset.variant("360x360").file_url} 2x" %>
            <% when "225", "225w", "270", "270w", "360" %>
              <%= tag.source type: "image/webp", srcset: "#{media_asset.variant("360x360").file_url} 1x, #{media_asset.variant("720x720").file_url} 2x" %>
            <% end %>
          <% end %>

          <%= tag.img src: variant.file_url, width: variant.width, height: variant.height, class: "post-preview-image", title: tooltip, alt: "post ##{post.id}", draggable: "false" -%>
        <% end %>
      </picture>
    <% end -%>
  </div>
  <% if recommended -%>
    <p class="desc recommended">
      <%= link_to recommended_posts_path(search: { post_id: post.id }), class: "more-recommended-posts", "data-post-id": post.id do %>
        <%= post.fav_count %>

        <%= empty_heart_icon(class: "fa-xs") %>

        <br>more Â»
      <% end %>
    </p>
  <% elsif show_votes -%>
    <div class="post-preview-score text-sm text-center mt-1">
      <%= render_post_votes post, current_user: current_user %>
    </div>
  <% end -%>

  <%= footer %>
<% end -%>
